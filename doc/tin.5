.\" Project   : tin
.\" Module    : tin.5
.\" Author    : U. Janssen
.\" Created   : 2000-07-10
.\" Updated   : 2000-08-24
.\" Notes     : needs a lot of work
.\"
.TH tin 5 "August 24th, 2000" "1.5.6" "A Usenet newsreader"

.SH NAME
tin, rtin \- related files

.SH DESCRIPTION
This manpage describes the various config files and their formats used by
the
.BR tin (1)
newsreader.

.SH FILES
.PP
.IR $HOME/.mailcap
.br
.IR /etc/mailcap
.br
.IR /usr/etc/mailcap
.br
.IR /usr/local/etc/mailcap
.sp
.RS
.BR mailcap (4)
files as defined in \fBRFC1524\fR. The Mailcap files are read by
.BR tin (1)
to determine how to display non-text messages at the local site. Any line
that starts with "#" is a comment. Blank lines are ignored. Otherwise, each
line defines a single mailcap entry for a single content type. Long lines
may be continued by ending them with a backslash character, "\\".
.sp
Each individual mailcap entry consists of a content-type specification, a
command to execute, and (possibly) a set of optional "flag" values.
.sp
The "type" field is simply any legal content type name. It is the string
that will be matched against the "Content-type" header to decide if this is
the mailcap entry that matches the current message. Additionally, the type
field may specify a subtype or a wildcard to match all subtypes.
.sp
The "command" field is any UNIX command and is used to specify the
interpreter for the given type of message. It will be passed to the shell
via the
.BR system (3)
facility.
.sp
Semicolons and backslashes within the command or any flag field must be
quoted with backslashes. If the field contains "%s", those two characters
will be replaced by the name of a file that contains the body of the
message. If it contains "%t", those two characters will be replaced by the
content-type field, including the subtype, if any. If it contains "%{"
followed by a parameter name and a closing "}", then all those characters
will be replaced by the value of the named parameter, if any, from the
Content-type header. Finally, if the field contains "\\%", those two
characters will be replaced by a single "%" character.
.\"
.\" Two special codes can appear in the viewing command for objects of type
.\" multipart (any subtype). These are "%n" and "%F". %n will be replaced by
.\" the number of parts within the multipart object. %F will be replaced by a
.\" series of arguments, two for each part, giving first the content-type and
.\" then the name of the temporary file where the decoded part has been stored.
.\"
.sp
Besides the type and command field the following "flags" are defined:
.TP
.B compose
The "compose" field may be used to specify a program that can be used to
compose a new body or body part in the given format. Its intended use is to
support mail composing agents that support the composition of multiple types
of mail using external composing agents. As with the view-command, the
semantics of program execution are operating system dependent. The result of
the composing program may be data that is not yet suitable for mail
transport - that is, a Content-Transfer-Encoding may need to be applied to
the data.
.TP
.B composetyped
The "composetyped" field is similar to the "compose" field, but is to be
used when the composing program needs to specify the Content-type header
field to be applied to the composed data. The "compose" field is simpler,
and is preferred for use with existing (non-mail-oriented) programs for
composing data in a given format. The "composetyped" field is necessary when
the Content-type information must include auxiliary parameters, and the
composition program must then know enough about mail formats to produce
output that includes the mail type information.
.TP
.B edit
The "edit" field may be used to specify a program that can be used to edit a
body or body part in the given format. In many cases, it may be identical
in content to the "compose" field, and shares the operating-system dependent
semantics for program execution.
.TP
.B print
The "print" field may be used to specify a program that can be used to print
a message or body part in the given format. As with the view-command, the
semantics of program execution are operating system dependent.
.TP
.B test
The "test" field may be used to test some external condition (e.g., the
machine architecture, or the window system in use) to determine whether or
not the mailcap line applies. It specifies a program to be run to test some
condition. The semantics of execution and of the value returned by the test
program are operating system dependent. If the test fails, a subsequent
mailcap entry should be sought. Multiple test fields are not permitted -
since a test can call a program, it can already be arbitrarily complex.
.TP
.B needsterminal
The "needsterminal" field indicates that the view-command must be run on an
interactive terminal. This is needed to inform window- oriented user agents
that an interactive terminal is needed. (The decision is not left
exclusively to the view-command because in some circumstances it may not be
possible for such programs to tell whether or not they are on interactive
terminals.) The needsterminal command should be assumed to apply to the
compose and edit commands, too, if they exist. Note that this is NOT a test
- it is a requirement for the environment in which the program will be
executed, and should typically cause the creation of a terminal window when
not executed on either a real terminal or a terminal window.
.TP
.B copiousoutput
The "copiousoutput" field indicates that the output from the view-command
will be an extended stream of output, and is to be interpreted as advice to
the UA (User Agent mail-reading program) that the output should be either
paged or made scroll-able. Note that it is probably a mistake if
needsterminal and copiousoutput are both specified.
.TP
.B description
The "description" field simply provides a textual description, optionally
quoted, that describes the type of data, to be used optionally by mail
readers that wish to describe the data before offering to display it.
.TP
.B textualnewlines
The "textualnewlines" field, if set to any non-zero value, indicates that
this type of data is line-oriented and that, if encoded in base64, all
newlines should be converted to canonical form (CRLF) before encoding, and
will be in that form after decoding. In general, this field is needed only
if there is line-oriented data of some type other than text/* or non-line-
oriented data that is a subtype of text.
.TP
.B x11-bitmap
The "x11-bitmap" field names a file, in X11 bitmap (xbm) format, which
points to an appropriate icon to be used to visually denote the presence of
this kind of data.
.TP
.B nametemplate
The "nametemplate" field gives a file name format, in which %s will be
replaced by a short unique string to give the name of the temporary file to
be passed to the viewing command. This is only expected to be relevant in
environments where filename extensions are meaningful, e.g., one could
specify that a GIF file being passed to a gif viewer should have a name
ending in ".gif" by using "nametemplate=%s.gif"
.PP
.BR tin (1)
currently only honours the "test", "description", "nametemplate" and partly
the "needsterminal" flags, all other flags are internally ignored. It also
can't handle the "%F" and "%n" expansions yet.
.TP
Example:
.RS
.nf
# mailcap file example
.br
image/*;\\
.br
.in +.3i
xv -8 -geometry +0 '%s';\\
.br
description=%{name} %t-Image;\\
.br
test=test "$DISPLAY" \\
.br
nametemplate=%s.IMAGE
.in -.3i
.sp
message/rfc822;\\
.br
.in +.3i
if test -x /usr/bin/less \\;\\
.in +.3i
then less '%s' \\;\\
else more '%s' \\; fi;\\
.in -.3i
.br
edit=${EDITOR-vi} '%s';\\
.br
compose=${EDITOR-vi} '%s';\\
.br
print=a2ps %s;\\
.br
needsterminal
.in -.3i
.fi
.RE
.RE
.PP

.IR $HOME/.mime.types
.br
.IR /etc/mime.types
.br
.IR /etc/tin/mime.types
.sp
.RS
mime type / filename extension pairs
.RE
.PP

.IR $HOME/.signature
.br
.IR $HOME/.Sig
.sp
.RS
signature
.RE
.PP

.IR $HOME/.sigfixed
.sp
.RS
fixed part of a randomly generated signature
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.cancelsecret
.sp
.RS
secret to be used for canlocks
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.newsauth
.sp
.RS
"\fInntpserver\fP \fIpassword\fP [\fIuser\fP]" pairs for NNTP servers
that require authorization. Any line that starts with "#" is a comment.
Blank lines are ignored. This file should be readable only for the user as
it contains the users uncrypted password for reading news!
.TP
.B nntpserver
full qualified domain name of the newsserver.
.TP
.B password
users uncrypted password for reading news.
.TP
.B user
username on the newsserver if it differs from the local login. this field is
optional.
.TP
Example:
.RS
# sample .newsauth file
.br
news.example.org  example
.br
news.example.net  news      guest
.RE
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.newsrc
.sp
.RS
subscribed newsgroups
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.oldnewsrc
.sp
.RS
backup of \fI${TIN_HOMEDIR-"$HOME"}/.newsrc\fP
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/.inputhistory
.sp
.RS
history of last used strings
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/.mail/
.sp
.RS
mailgroups index files
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/.news/
.sp
.RS
newsgroups index files
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/.save/
.sp
.RS
saved newsgroups index files
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/active.mail
.sp
.RS
active file ("\fImail_group_name\fP \fImaxnum\fP \fIminnum\fP
\fImailspool\fP"-pairs) of user's mailgroups (requires
.BR tin (1)
to be build with mh-mail-handling support).
.TP
.B mail_group_name
must be the pathname of the mailbox relative to field #4 with / changed to .
.TP
.B maxnum
just put a large number here, something higher than the highest message in
the mailbox
.TP
.B minnum
put 0 here
.TP
.B mailspool
path of mail spool directory. This must be the full pathname to the root of
the mail folder area.
.TP
Example:
.RS
Mail.inbox  12345 00000 /home/foo
.br
Mail.outbox 23456 00000 /home/foo
.RE
.sp
This allows access to the 'inbox' and 'outbox' folders of user foo.
They are accessed via /home/foo/Mail/inbox and /home/foo/Mail/outbox
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/active.save
.sp
.RS
active file of user's saved newsgroups, used by \fBtin -R\fR.
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/attributes
.sp
.RS
user specified group attributes
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/filter
.sp
.RS
filter file
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/keymap
.br
.IR /etc/tin/keymap
.sp
.RS
key mappings
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/newsrctable
.sp
.RS
"\fInntpserver\fP \fInewsrc\fP \fIshortname\fP [...]" pairs to use with
``\fB-g\fR'' command-line switch.
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/posted
.sp
.RS
posting history
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/postponed.articles
.sp
.RS
postponed articles
.RE
.PP

.IR ${TIN_HOMEDIR-"$HOME"}/.tin/tinrc
.sp
.RS
options
.RE
.PP

.IR /etc/tin/tin.defaults
.sp
.RS
global configuration
.RE
.PP

.IR /usr/local/share/locale/${LC_MESSAGES}/LC_MESSAGES/tin.mo
.sp
.RS
translation into language specified in $\fBLC_ALL\fR, $\fBLC_MESSAGES\fR or
$\fBLANG\fR
.RE
.PP

.\" tin uses inns old (pre 2.x) Path convention.
.\" as with inn >= 2.2.x getting more and more popular
.\" we should think about checking for the new Paths
.\" (described shown below).
.IR ${NEWSLIBDIR-/news/db}/active
.sp
.RS
This file lists the newsgroups that the local site receives. Each newsgroup
should be listed only once. Each line specifies one group; within each
newsgroup, articles are assigned unique names, which are monotonically
increasing numbers.
.sp
If an article is posted to newsgroups not mentioned in this file, those
newsgroups are ignored.
.\" IIRC tin issues a waring in that case
If no valid newsgroups are specified, the article is rejected.
.sp
Each line consists of four space-separated fields "\fIname\fP \fIhimark\fP
\fIlomark\fP \fIflags\fP".
.TP
.B name
is the name of the newsgroup
.TP
.B himark
is the highest article number that has been used in that newsgroup
.TP
.B lowmark
is the lowest article number in the group; this number is not guaranteed to
be accurate, and should only be taken to be a hint. Note that because of
article cancellations, there may be gaps in the numbering sequence. If the
lowest article number is greater then the highest article number, then there
are no articles in the newsgroup.
.TP
.B flags
can be one of those
.RS
.TP
.B y
local postings are allowed
.TP
.B n
no local postings are allowed, only remote ones
.TP
.B m
the group is moderated and all postings must be approved
.TP
.B j
articles in this group are not kept, but only passed on
.TP
.B x
articles cannot be posted to this newsgroup
.TP
.B =foo.bar
articles are locally filed into the ``foo.bar'' group
.RE
.TP
.BR tin (1)
only only tries to read the file if you read directly from the local spool,
if you read news via NNTP,
.BR tin (1)
uses the LIST command instead.
.RE
.PP

.IR ${NEWSLIBDIR-/news/db}/active.times
.sp
.RS
This file provides a chronological record of when newsgroups are created. It
is normally updated by the local newsserver (i.e
.BR innd (8))
whenever a newgroup is created. Each line consist of three space-separated
fields "\fIname\fP \fItime\fP \fIcreator\fP".
.TP
.B name
is the name of the newsgroup
.TP
.B time
is the time when the group was created, expressed as the number of seconds
since the epoch.
.TP
.B creator
is the electronic mail address of the person who created the group.
.TP
.BR tin (1)
only only tries to read the file if you read directly from the local spool,
if you read news via NNTP,
.BR tin (1)
uses the NEWGROUPS command instead.
.RE
.PP

.IR ${NEWSLIBDIR-/news/db}/newsgroups
.sp
.RS
This file provides shot descriptions of each newsgroup. It is normally
updated by the local newsserver (i.e
.BR innd (8))
whenever a newgroup is created. Each line consist of two tab-separated
fields "\fIgroup.name\fP	\fIone-line description\fP".
.TP
.B group.name
is the name of the newsgroup
.TP
.B one-line description
is a short single-line description of the group
.TP
.BR tin (1)
only only tries to read the file if you read directly from the local spool,
if you read news via NNTP,
.BR tin (1)
uses the LIST NEWSGROUPS command instead.
.RE
.PP

.IR ${NEWSLIBDIR-/news/db}/subscriptions
.\" is the Path correct? or is it /news/etc/subscriptions
.sp
.RS
This file contains a list of newsgroups - one per line - which the client
should subscribe to when the user has no ${TIN_HOMEDIR-"$HOME"}/.newsrc for
the newsserver.
.BR tin (1)
only only tries to read the file if you read directly from the local spool,
if you read news via NNTP,
.BR tin (1)
uses the LIST SUBSCRIPTIONS command instead.

.SH "SEE ALSO"
.BR active (5),
.BR innd (8),
.BR mailcap (4),
.BR system (3),
.BR tin (1),
.BR RFC977 ,
.BR RFC1036 ,
.BR RFC1524 ,
.BR RFC2045 ,
.BR RFC2046 ,
.BR RFC2047 ,
.BR RFC2048
