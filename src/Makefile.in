# Source Makefile for tin
# - for configuration options read the ../doc/INSTALL file.
#
# Updated: 2000-07-19
#
# Copyright (c) 1995-2000 Thomas E. Dickey <dickey@clark.net>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#    This product includes software developed by Thomas E. Dickey.
# 4. The name of the author may not be used to endorse or promote
#    products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
# GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

SHELL		= /bin/sh
prefix		= @prefix@
exec_prefix	= @exec_prefix@
top_srcdir	= @top_srcdir@
top_builddir	= ..
srcdir		= @srcdir@
VPATH		= $(srcdir)

# Compiler, linker & parser commands
CC	= @CC@
CPP	= @CPP@
x	= @PROG_EXT@
PRELIB	= @LIB_PREFIX@

DEBUG	= @ENABLE_DEBUG@ -DDEBUG #-DDEBUG_NEWSRC -DPROFILE -DDEBUG_REFS
CANLOCK = # -DUSE_CANLOCK # -DEVIL_INSIDE
CPPOPTS	= @DEFS@ -I. -I../include -I$(top_builddir)/pcre -I$(top_srcdir)/pcre -DLOCALEDIR=\"$(prefix)/@DATADIRNAME@/locale\" -I$(INCDIR) $(DEBUG) $(CANLOCK) @CPPFLAGS@
CFLAGS	= @CFLAGS@

LD	= $(CC)
LDFLAGS	= @LDFLAGS@
YACC	= @YACC@

CANLIB	= # -L../libcanlock -lcanlock
LIBS	= -L../pcre -lpcre $(CANLIB) @LIBS@ @INN_NNTPLIB@ @INTLDIR_MAKE@ @INTLLIBS@

# Where do you want the binary & manual page installed?
DESTDIR	= @DESTDIR@
INS_BINARY_DIR	= @bindir@
INS_MANUAL_DIR	= @mandir@/man
INS_SYSDEF_DIR	= @TIN_DEFAULTS_DIR@
INS_MANUAL_EXT	= 1
INS_OLD_SUFFIX  = old

# Project
PROJECT	= @PACKAGE@
EXE	= @PACKAGE@$x
VER	= @VERSION@

# directory structure
DOCDIR	= $(top_srcdir)/doc
INCDIR	= $(top_srcdir)/include
BINDIR	= .
OBJDIR	= .
SRCDIR	= $(srcdir)

# standard commands
CD	= cd
CFLOW	= cflow
CHMOD	= chmod
CP	= cp
CSCOPE	= cscope
ECHO	= echo
LINT	= @LINT@
LN	= @LN_S@
LS	= ls -l
MV	= mv -f
RM	= rm
TAGS	= ctags
ETAGS	= etags
INSTALL	= @INSTALL@
@SET_MAKE@

HFILES	= \
	../include/autoconf.h \
	$(INCDIR)/bool.h \
	$(INCDIR)/bugrep.h \
	$(INCDIR)/extern.h \
	$(INCDIR)/keymap.h \
	$(INCDIR)/menukeys.h \
	$(INCDIR)/nntplib.h \
	$(INCDIR)/plp_snprintf.h \
	$(INCDIR)/policy.h \
	$(INCDIR)/proto.h \
	$(INCDIR)/rfc2046.h \
	$(INCDIR)/stpwatch.h \
	$(INCDIR)/tin.h \
	$(INCDIR)/tinrc.h \
	$(INCDIR)/tnntp.h \
	$(INCDIR)/version.h
#	$(INCDIR)/config.h

CFILES	= \
	$(SRCDIR)/active.c \
	$(SRCDIR)/art.c \
	$(SRCDIR)/attrib.c \
	$(SRCDIR)/auth.c \
	$(SRCDIR)/charset.c \
	$(SRCDIR)/color.c \
	$(SRCDIR)/config.c \
	$(SRCDIR)/cook.c \
	$(SRCDIR)/curses.c \
	$(SRCDIR)/debug.c \
	$(SRCDIR)/envarg.c \
	$(SRCDIR)/feed.c \
	$(SRCDIR)/filter.c \
	$(SRCDIR)/getline.c \
	$(SRCDIR)/global.c \
	$(SRCDIR)/group.c \
	$(SRCDIR)/hashstr.c \
	$(SRCDIR)/header.c \
	$(SRCDIR)/help.c \
	$(SRCDIR)/inews.c \
	$(SRCDIR)/init.c \
	$(SRCDIR)/keymap.c \
	$(SRCDIR)/lang.c \
	$(SRCDIR)/list.c \
	$(SRCDIR)/mail.c \
	$(SRCDIR)/main.c \
	$(SRCDIR)/memory.c \
	$(SRCDIR)/mimetypes.c \
	$(SRCDIR)/misc.c \
	$(SRCDIR)/newsrc.c \
	$(SRCDIR)/nntplib.c \
	$(SRCDIR)/nrctbl.c \
	$(SRCDIR)/open.c \
	$(SRCDIR)/page.c \
	$(SRCDIR)/parsdate.y \
	$(SRCDIR)/pgp.c \
	$(SRCDIR)/plp_snprintf.c \
	$(SRCDIR)/post.c \
	$(SRCDIR)/prompt.c \
	$(SRCDIR)/read.c \
	$(SRCDIR)/refs.c \
	$(SRCDIR)/regex.c \
	$(SRCDIR)/rfc1524.c \
	$(SRCDIR)/rfc2045.c \
	$(SRCDIR)/rfc2046.c \
	$(SRCDIR)/rfc2047.c \
	$(SRCDIR)/save.c \
	$(SRCDIR)/screen.c \
	$(SRCDIR)/search.c \
	$(SRCDIR)/select.c \
	$(SRCDIR)/sigfile.c \
	$(SRCDIR)/signal.c \
	$(SRCDIR)/strftime.c \
	$(SRCDIR)/string.c \
	$(SRCDIR)/tags.c \
	$(OBJDIR)/tcurses.c \
	$(SRCDIR)/thread.c \
	$(SRCDIR)/wildmat.c \
	$(SRCDIR)/xref.c

EXTRAOBJS = @EXTRAOBJS@

EXTRALIBS = ../pcre/$(PRELIB)pcre.a @INTLDIR_MAKE@ @INTLLIBS@

OFILES	= @ALLOCA@ $(EXTRAOBJS) \
	$(OBJDIR)/active.o \
	$(OBJDIR)/art.o \
	$(OBJDIR)/attrib.o \
	$(OBJDIR)/auth.o \
	$(OBJDIR)/charset.o \
	$(OBJDIR)/color.o \
	$(OBJDIR)/config.o \
	$(OBJDIR)/cook.o \
	$(OBJDIR)/curses.o \
	$(OBJDIR)/debug.o \
	$(OBJDIR)/envarg.o \
	$(OBJDIR)/feed.o \
	$(OBJDIR)/filter.o \
	$(OBJDIR)/getline.o \
	$(OBJDIR)/global.o \
	$(OBJDIR)/group.o \
	$(OBJDIR)/hashstr.o \
	$(OBJDIR)/header.o \
	$(OBJDIR)/help.o \
	$(OBJDIR)/inews.o \
	$(OBJDIR)/init.o \
	$(OBJDIR)/joinpath.o \
	$(OBJDIR)/keymap.o \
	$(OBJDIR)/lang.o \
	$(OBJDIR)/list.o \
	$(OBJDIR)/mail.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/memory.o \
	$(OBJDIR)/mimetypes.o \
	$(OBJDIR)/misc.o \
	$(OBJDIR)/newsrc.o \
	$(OBJDIR)/nntplib.o \
	$(OBJDIR)/nrctbl.o \
	$(OBJDIR)/open.o \
	$(OBJDIR)/page.o \
	$(OBJDIR)/parsdate.o \
	$(OBJDIR)/pgp.o \
	$(OBJDIR)/plp_snprintf.o \
	$(OBJDIR)/post.o \
	$(OBJDIR)/prompt.o \
	$(OBJDIR)/read.o \
	$(OBJDIR)/refs.o \
	$(OBJDIR)/regex.o \
	$(OBJDIR)/rfc1524.o \
	$(OBJDIR)/rfc2045.o \
	$(OBJDIR)/rfc2046.o \
	$(OBJDIR)/rfc2047.o \
	$(OBJDIR)/save.o \
	$(OBJDIR)/screen.o \
	$(OBJDIR)/search.o \
	$(OBJDIR)/select.o \
	$(OBJDIR)/sigfile.o \
	$(OBJDIR)/signal.o \
	$(OBJDIR)/strftime.o \
	$(OBJDIR)/string.o \
	$(OBJDIR)/tags.o \
	$(OBJDIR)/tcurses.o \
	$(OBJDIR)/thread.o \
	$(OBJDIR)/wildmat.o \
	$(OBJDIR)/xref.o


ALL_FILES = $(HFILES) $(CFILES) $(NNTP)

LINTFLAGS = -a -c -h -n -x $(CPPOPTS) \
	-DUSE_ISO2ASC=\"2\" \
	-DHAVE_ISPELL \
	-DHAVE_COLOR

all: $(BINDIR)/$(EXE)

.SUFFIXES: .i

.c.o:
@SHOW_CC@
	@ECHO_CC@$(CC) $(CPPOPTS) $(CFLAGS) -c $(srcdir)/$*.c

.c.i:
@SHOW_CC@
	@ECHO_CC@$(CPP) -C $(CPPOPTS) $*.c >$@

# explicit rules to allow running lint, and to accommodate older 'make' programs
$(OBJDIR)/parsdate.o: $(SRCDIR)/parsdate.y
	@$(ECHO) "expect 6 shift/reduce conflicts..."
	$(YACC) $(SRCDIR)/parsdate.y
	$(MV) y.tab.c $(OBJDIR)/parsdate.c
@SHOW_CC@
	@ECHO_CC@$(CC) $(CPPOPTS) $(CFLAGS) -c $(OBJDIR)/parsdate.c

$(OBJDIR)/parsdate.c: $(SRCDIR)/parsdate.y
	@$(ECHO) "expect 6 shift/reduce conflicts..."
	$(YACC) $(SRCDIR)/parsdate.y
	$(MV) y.tab.c $(OBJDIR)/parsdate.c

$(BINDIR)/$(EXE): $(OFILES) $(EXTRALIBS)
	@$(ECHO) "Linking $(EXE) v$(VER)..."
	$(LD) $(LDFLAGS) -o $(BINDIR)/$(EXE) $(OFILES) $(NNTPLIB) $(NETLIBS) $(LIBS) $(DEBUG)
	@$(LS) $(BINDIR)/$(EXE)

help:
	@$(ECHO) "This Makefile offers the following options:"
	@$(ECHO) " "
	@$(ECHO) "    make [all]           [ Build the binary for your OS ]"
	@$(ECHO) "    make clean           [ Delete all object files ]"
	@$(ECHO) "    make install         [ Install the binary & the manual page ]"
	@$(ECHO) "    make uninstall       [ Uninstall the binary & the manual page ]"
	@$(ECHO) "    make install_manpage [ Install the manual page ]"
	@$(ECHO) "    make install_sysdefs [ Install the system-wide-defaults file ]"
	@$(ECHO) "    make help            [ Show this text ]"
	@$(ECHO) " "

$(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT) \
$(DESTDIR)$(INS_BINARY_DIR) \
$(INS_SYSDEF_DIR) :
	$(top_srcdir)/mkdirs.sh $@

install_manpage: $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)
	@$(ECHO) "Installing $(EXE) manual page to $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)..."
	@$(INSTALL) -m 444 $(DOCDIR)/tin.1 $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)/$(EXE).$(INS_MANUAL_EXT)
#	@$(INSTALL) -m 444 $(DOCDIR)/tin.5 $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)/$(EXE).5


uninstall_manpage:
	@$(ECHO) "Uninstalling $(EXE) manual page in $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)..."
	@-$(RM) -f $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)/$(EXE).$(INS_MANUAL_EXT)
#	@-$(RM) -f $(DESTDIR)$(INS_MANUAL_DIR)$(INS_MANUAL_EXT)/$(EXE).5

install_sysdefs: $(INS_SYSDEF_DIR)
	@$(ECHO) "Installing system-wide defaults to $(INS_SYSDEF_DIR)..."
	@-if test -f $(INS_SYSDEF_DIR)/tin.defaults ; then $(ECHO) "  ... backing up existing tin.defaults file to tin.defaults.$(INS_OLD_SUFFIX)" ; $(MV) $(INS_SYSDEF_DIR)/tin.defaults $(INS_SYSDEF_DIR)/tin.defaults.$(INS_OLD_SUFFIX) ; fi
	@-if test -f $(INS_SYSDEF_DIR)/mime.types ; then $(ECHO) "  ... backing up existing mime.types file to mime.types.$(INS_OLD_SUFFIX)" ; $(MV) $(INS_SYSDEF_DIR)/mime.types $(INS_SYSDEF_DIR)/mime.types.$(INS_OLD_SUFFIX) ; fi
	@$(INSTALL) -m 644 $(DOCDIR)/tin.defaults $(INS_SYSDEF_DIR)/tin.defaults
	@$(INSTALL) -m 644 $(DOCDIR)/mime.types $(INS_SYSDEF_DIR)/mime.types

uninstall_sysdefs:
	@$(ECHO) "Uninstalling system-wide defaults in $(INS_SYSDEF_DIR)..."
	@-$(RM) -f $(INS_SYSDEF_DIR)/tin.defaults
	@-$(RM) -f $(INS_SYSDEF_DIR)/mime.types

install: $(DESTDIR)$(INS_BINARY_DIR)
	@$(MAKE) all
	@$(ECHO) "Installing $(EXE) v$(VER) to $(DESTDIR)$(INS_BINARY_DIR)..."
	@$(INSTALL) -s $(BINDIR)/$(EXE) $(DESTDIR)$(INS_BINARY_DIR)/$(EXE)
	@( $(CD) $(DESTDIR)$(INS_BINARY_DIR) && $(RM) -f r$(EXE) && $(LN) $(EXE) r$(EXE) )
	@$(MAKE) install_manpage
	@$(MAKE) install_nls

uninstall:
	@$(ECHO) "Uninstalling $(EXE) in $(DESTDIR)$(INS_BINARY_DIR)..."
	@-$(RM) -f $(DESTDIR)$(INS_BINARY_DIR)/$(EXE)
	@-$(RM) -f $(DESTDIR)$(INS_BINARY_DIR)/r$(EXE)
	@$(MAKE) uninstall_manpage
	@$(MAKE) uninstall_nls

install_nls:
	@-if test -r ../po/Makefile ; then $(ECHO) "Installing NLS-files" ; $(CD) ../po/ && $(MAKE) install ; fi

uninstall_nls:
	@-if test -r ../po/Makefile ; then $(ECHO) "Uninstalling NLS-files" ; $(CD) ../po/ && $(MAKE) uninstall ; fi

tags:
	@$(ECHO) "Generating tags (results in ./tags)..."
	@-$(RM) -f tags
	@$(TAGS) $(HFILES) $(CFILES)

TAGS:
	@$(ECHO) "Generating emacs tags (results in ./TAGS)..."
	@-$(RM) -f TAGS
	@$(ETAGS) $(HFILES) $(CFILES)

lint:	$(CFILES) $(OBJDIR)/parsdate.c tincfg.h
	@$(ECHO) "Linting source (results in ./LINT)..."
	@$(LINT) $(LINTFLAGS) -DNNTP_ABLE `/bin/ls $(CFILES)|sed -e 's/\.y/.c/'` $(LIBS) > LINT

clean:
	@$(ECHO) "Cleaning..."
	@-$(RM) -f $(OFILES)
	@-$(RM) -f $(OBJDIR)/parsdate.c
	@-$(RM) -f LINT *.ln *.out
	@-$(RM) -f makecfg$x makecfg.o tincfg.h
	@-$(RM) -f core *~
	@-$(RM) -f $(EXE)
	@-if test -r ../pcre/Makefile ; then $(CD) ../pcre && $(ECHO) "Cleaning Philip Hazel's Perl-compatible regular expressions library..." && $(MAKE) @cf_cv_makeflags@ clean ; fi
@MSG_DIR_MAKE@	@-if test -r ../po/Makefile ; then $(CD) ../po && $(MAKE) @cf_cv_makeflags@ $@ ; fi
@INTLDIR_MAKE@	@-if test -r ../intl/Makefile ; then $(CD) ../intl && $(MAKE) @cf_cv_makeflags@ $@ ; fi

laundry \
dirty:
	@$(ECHO) "I'm sorry, this is not supported yet ..."

distclean \
clobber :: clean
	@$(ECHO) "Clobbering..."
	@-$(RM) -f $(OFILES) $(BINDIR)/$(EXE) tags TAGS LINT cflow.$(PROJECT)

distclean ::
@INTLDIR_MAKE@	@-$(CD) ../intl && $(MAKE) @cf_cv_makeflags@ $@
@MSG_DIR_MAKE@	@-$(CD) ../po && $(MAKE) @cf_cv_makeflags@ $@

cflow:
	@$(ECHO) "Creating cflow for $(PROJECT)..."
	@$(CFLOW) -I$(INCDIR) -I$(SRCDIR) -I../pcre $(CFILES) > cflow.$(PROJECT)

cscope:
	@$(ECHO) "Creating cscope database $(PROJECT)..."
	@$(CSCOPE) $(ALL_FILES)

canlock:
	@$(ECHO) "Building libcanlock..."
	@$(CD) ../libcanlock && ./Build

TIN_DEP	= \
	Makefile \
	$(INCDIR)/tin.h \
	$(INCDIR)/tinrc.h \
	../include/autoconf.h \
	$(INCDIR)/extern.h \
	$(INCDIR)/nntplib.h \
	$(INCDIR)/proto.h


../pcre/$(PRELIB)pcre.a:
	@$(ECHO) "Building Philip Hazel's Perl regular expressions library..."
	@$(CD) ../pcre && $(MAKE) @cf_cv_makeflags@ $(PRELIB)pcre.a

@INTLDIR_MAKE@@INTLLIBS@:
@INTLDIR_MAKE@	@$(ECHO) "Building GNU gettext library..."
@INTLDIR_MAKE@	@$(CD) ../intl && $(MAKE) @cf_cv_makeflags@

tincfg.h:			$(SRCDIR)/tincfg.tbl \
				makecfg$x
	./makecfg $(SRCDIR)/tincfg.tbl tincfg.h

makecfg$x:			$(OBJDIR)/makecfg.o
	$(LD) $(LDFLAGS) $(OBJDIR)/makecfg.o -o $@ @LIBS@

$(OBJDIR)/active.o:		$(SRCDIR)/active.c $(TIN_DEP)
$(OBJDIR)/art.o:		$(SRCDIR)/art.c $(TIN_DEP) \
				$(INCDIR)/stpwatch.h
$(OBJDIR)/attrib.o:		$(SRCDIR)/attrib.c $(TIN_DEP)
$(OBJDIR)/auth.o:		$(SRCDIR)/auth.c $(TIN_DEP)
$(OBJDIR)/charset.o:		$(SRCDIR)/charset.c $(TIN_DEP)
$(OBJDIR)/color.o:		$(SRCDIR)/color.c $(TIN_DEP)
$(OBJDIR)/config.o:		$(SRCDIR)/config.c $(TIN_DEP) \
				tincfg.h \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/version.h
$(OBJDIR)/curses.o:		$(SRCDIR)/curses.c $(TIN_DEP)
$(OBJDIR)/cook.o:		$(SRCDIR)/cook.c $(TIN_DEP) \
				$(INCDIR)/rfc2046.h
$(OBJDIR)/debug.o:		$(SRCDIR)/debug.c $(TIN_DEP)
$(OBJDIR)/envarg.o:		$(SRCDIR)/envarg.c $(TIN_DEP)
$(OBJDIR)/feed.o:		$(SRCDIR)/feed.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/rfc2046.h
$(OBJDIR)/filter.o:		$(SRCDIR)/filter.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/getline.o:		$(SRCDIR)/getline.c $(TIN_DEP)
$(OBJDIR)/global.o:		$(SRCDIR)/getline.c $(TIN_DEP)
$(OBJDIR)/group.o:		$(SRCDIR)/group.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/hashstr.o:		$(SRCDIR)/hashstr.c $(TIN_DEP)
$(OBJDIR)/header.o:		$(SRCDIR)/header.c $(TIN_DEP) \
				$(INCDIR)/tnntp.h
$(OBJDIR)/help.o:		$(SRCDIR)/help.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/inews.o:		$(SRCDIR)/inews.c $(TIN_DEP) \
				$(INCDIR)/tnntp.h
$(OBJDIR)/init.o:		$(SRCDIR)/init.c $(TIN_DEP) \
				$(INCDIR)/bugrep.h \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/tnntp.h \
				$(INCDIR)/version.h
$(OBJDIR)/joinpath.o:		$(SRCDIR)/joinpath.c $(TIN_DEP)
$(OBJDIR)/keymap.o:		$(SRCDIR)/keymap.c $(TIN_DEP) \
				$(INCDIR)/keymap.h \
				$(INCDIR)/menukeys.h
$(OBJDIR)/lang.o:		$(SRCDIR)/lang.c $(TIN_DEP)
$(OBJDIR)/list.o:		$(SRCDIR)/list.c $(TIN_DEP)
$(OBJDIR)/mail.o:		$(SRCDIR)/mail.c $(TIN_DEP)
$(OBJDIR)/main.o:		$(SRCDIR)/main.c $(TIN_DEP) \
				$(INCDIR)/bugrep.h \
				$(INCDIR)/version.h
$(OBJDIR)/makecfg.o:		$(SRCDIR)/makecfg.c $(TIN_DEP)
$(OBJDIR)/memory.o:		$(SRCDIR)/memory.c $(TIN_DEP)
$(OBJDIR)/mimetypes.o:		$(SRCDIR)/mimetypes.c $(TIN_DEP)
$(OBJDIR)/misc.o:		$(SRCDIR)/misc.c $(TIN_DEP) \
				$(INCDIR)/bugrep.h \
				$(INCDIR)/policy.h \
				$(INCDIR)/rfc2046.h \
				$(INCDIR)/version.h
$(OBJDIR)/newsrc.o:		$(SRCDIR)/newsrc.c $(TIN_DEP)
$(OBJDIR)/nntplib.o:		$(SRCDIR)/nntplib.c $(TIN_DEP) \
				$(INCDIR)/tnntp.h
$(OBJDIR)/nrctbl.o:		$(SRCDIR)/nrctbl.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/version.h
$(OBJDIR)/open.o:		$(SRCDIR)/open.c $(TIN_DEP) \
				$(INCDIR)/version.h
$(OBJDIR)/page.o:		$(SRCDIR)/page.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/rfc2046.h
$(OBJDIR)/parsdate.o:		$(OBJDIR)/parsdate.y $(TIN_DEP)
$(OBJDIR)/pgp.o:		$(SRCDIR)/pgp.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/plp_snprintf.o:	$(SRCDIR)/plp_snprintf.c $(TIN_DEP) \
				$(INCDIR)/plp_snprintf.h
$(OBJDIR)/post.o:		$(SRCDIR)/post.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/rfc2046.h \
				$(INCDIR)/version.h
$(OBJDIR)/prompt.o:		$(SRCDIR)/prompt.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/read.o:		$(SRCDIR)/read.c $(TIN_DEP)
$(OBJDIR)/refs.o:		$(SRCDIR)/refs.c $(TIN_DEP)
$(OBJDIR)/regex.o:		$(SRCDIR)/regex.c $(TIN_DEP)
$(OBJDIR)/rfc1524.o:		$(SRCDIR)/rfc1524.c $(TIN_DEP)
$(OBJDIR)/rfc2045.o:		$(SRCDIR)/rfc2045.c $(TIN_DEP)
$(OBJDIR)/rfc2046.o:		$(SRCDIR)/rfc2046.c $(TIN_DEP) \
				$(INCDIR)/rfc2046.h
$(OBJDIR)/rfc2047.o:		$(SRCDIR)/rfc2047.c $(TIN_DEP)
$(OBJDIR)/save.o:		$(SRCDIR)/save.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h \
				$(INCDIR)/rfc2046.h
$(OBJDIR)/screen.o:		$(SRCDIR)/screen.c $(TIN_DEP)
$(OBJDIR)/search.o:		$(SRCDIR)/search.c $(TIN_DEP)
$(OBJDIR)/select.o:		$(SRCDIR)/select.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/sigfile.o:		$(SRCDIR)/sigfile.c $(TIN_DEP)
$(OBJDIR)/signal.o:		$(SRCDIR)/signal.c $(TIN_DEP)
$(OBJDIR)/strftime.o:		$(SRCDIR)/strftime.c $(TIN_DEP)
$(OBJDIR)/string.o:		$(SRCDIR)/string.c $(TIN_DEP)
$(OBJDIR)/tags.o:		$(SRCDIR)/tags.c $(TIN_DEP)
$(OBJDIR)/tcurses.o:		$(SRCDIR)/tcurses.c $(TIN_DEP)
$(OBJDIR)/thread.o:		$(SRCDIR)/thread.c $(TIN_DEP) \
				$(INCDIR)/menukeys.h
$(OBJDIR)/wildmat.o:		$(SRCDIR)/wildmat.c $(TIN_DEP)
$(OBJDIR)/xref.o:		$(SRCDIR)/xref.c $(TIN_DEP)
